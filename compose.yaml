x-timezone: &timezone
  TZ: Europe/Moscow

services:
  java_app:
    image: java_app
    build:
      context: .
      dockerfile: dockerfile
    container_name: java_app
    env_file:
      - .env
    restart: always
    environment:
      BOT_TOKEN: ${BOT_TOKEN}
      SPRING_DATASOURCE_URL: ${DB_URL}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      <<: *timezone
    ports:
      - "8888:8888"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  postgres:
    image: postgres:14
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: ${DB}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      <<: *timezone
    ports:
      - "127.0.0.1:5440:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d tgbotforbooking -U postgres" ]
      interval: 5s
      timeout: 10s
      retries: 3

  redis:
    image: redis:latest
    container_name: redis
    sysctls:
      - vm.overcommit_memory=1
    environment:
      - REDIS_MEMORY=2gb
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_data:/var/lib/redis/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 30s
      retries: 3

volumes:
  pg_data:
  redis_data: